[{"/home/shivam/Desktop/lms task/elearning/src/index.js":"1","/home/shivam/Desktop/lms task/elearning/src/reportWebVitals.js":"2","/home/shivam/Desktop/lms task/elearning/src/App.js":"3","/home/shivam/Desktop/lms task/elearning/src/components/Login/Login.js":"4","/home/shivam/Desktop/lms task/elearning/src/components/Homepage/Homepage.js":"5","/home/shivam/Desktop/lms task/elearning/src/components/AllCourses/Allcourse.js":"6","/home/shivam/Desktop/lms task/elearning/src/components/UpcomingCourses/UpcomingCourse.js":"7","/home/shivam/Desktop/lms task/elearning/src/components/Details1/Permutation.js":"8","/home/shivam/Desktop/lms task/elearning/src/components/Quiz/Quiz.js":"9","/home/shivam/Desktop/lms task/elearning/src/components/Data/QuizData.js":"10","/home/shivam/Desktop/lms task/elearning/src/components/QuizResult/QuizResult.js":"11"},{"size":257,"mtime":1682788483780,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1682787843082,"results":"14","hashOfConfig":"13"},{"size":1040,"mtime":1682877111660,"results":"15","hashOfConfig":"13"},{"size":1631,"mtime":1682886582136,"results":"16","hashOfConfig":"13"},{"size":6475,"mtime":1682909902864,"results":"17","hashOfConfig":"13"},{"size":3661,"mtime":1682885622086,"results":"18","hashOfConfig":"13"},{"size":3160,"mtime":1682863987322,"results":"19","hashOfConfig":"13"},{"size":3171,"mtime":1682877082208,"results":"20","hashOfConfig":"13"},{"size":2197,"mtime":1682875939244,"results":"21","hashOfConfig":"13"},{"size":717,"mtime":1682909562314,"results":"22","hashOfConfig":"13"},{"size":984,"mtime":1682885282133,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16kyjoq",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/shivam/Desktop/lms task/elearning/src/index.js",[],[],"/home/shivam/Desktop/lms task/elearning/src/reportWebVitals.js",[],[],"/home/shivam/Desktop/lms task/elearning/src/App.js",["62"],[],"import logo from './logo.svg';\nimport './App.css';\nimport Login from './components/Login/Login';\nimport {BrowserRouter,Route,Routes} from 'react-router-dom';\nimport Homepage from './components/Homepage/Homepage';\nimport Allcourse from './components/AllCourses/Allcourse';\nimport UpcomingCourse from './components/UpcomingCourses/UpcomingCourse';\nimport Permutation from './components/Details1/Permutation';\nimport Quiz from './components/Quiz/Quiz';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      \n      <Routes>\n      \n        <Route path='/' element={<Login/>}/>\n        <Route path='/homepage' element={<Homepage/>}/>\n        <Route path='/allcourse' element={<Allcourse/>}/>\n        <Route path='/upcomingcourse' element={<UpcomingCourse/>}/>\n        <Route path='/permutationdetails' element={<Permutation/>}/>\n        <Route path='/skillquiz' element={<Quiz/>}/>\n\n  \n\n\n      </Routes>\n      \n      </BrowserRouter>\n      {/* <Quiz/> */}\n      \n      \n     \n    </div>\n  );\n}\n\nexport default App;\n",[],"/home/shivam/Desktop/lms task/elearning/src/components/Login/Login.js",["63"],[],"/home/shivam/Desktop/lms task/elearning/src/components/Homepage/Homepage.js",[],[],"/home/shivam/Desktop/lms task/elearning/src/components/AllCourses/Allcourse.js",["64","65","66"],[],"import React from 'react'\nimport {Grid,Box,Typography,Button} from '@mui/material'\nimport './Allcourse.css';\nimport pnc from '../AllCourses/p&c.jpeg';\nimport learn from '../AllCourses/learncode.png';\nimport physics from '../AllCourses/physics.jpeg';\nimport {useNavigate} from 'react-router-dom';\n\nconst Allcourse = () => {\n    const navigate = useNavigate();\n    const handleClick=()=>{\n        navigate('/homepage');\n\n    }\n    const handleDetails=()=>{\n        navigate('/permutationdetails')\n    }\n  return (\n    <div>\n        <h1 className='head'>All Courses\n        <span className='homebtn'>\n        <Button\n        variant='outlined'\n        sx={{bgcolor:'black',color:\"white\"}}\n        onClick={handleClick}\n        >\n        HOME\n        </Button>\n\n        </span>\n        </h1>\n        \n    <Grid container spacing={4} my={4} sx={{paddingLeft:\"50px\"}}>\n        <Grid item xs={4}>\n            <Box className=\"card\" sx={{width:\"380px\",height:\"300px\"}}>\n                    <Typography className=\"count\">\n                    {/* {cardData[0]?.totalAvailableIRC} */}\n                    <div className='courseimg'>\n                    <img src={pnc} className='pnc'/>\n                    </div>\n\n                    </Typography>\n                    <Typography className=\"title\">\n                    Permutation and combination\n                    </Typography>\n                    <div className='detailbtn'>\n                    <Button\n                    variant='outlined'\n                    sx={{bgcolor:\"skyblue\",color:\"black\"}}\n                    onClick={handleDetails}\n                    >\n                        View Details\n                    </Button>\n\n                    </div>\n                    \n\n                   \n                    \n            </Box>\n        </Grid>\n        <Grid item  xs={4} sm={4} md={4}>\n            <Box className=\"card\" sx={{width:\"380px\",height:\"300px\"}}>\n                    <Typography className=\"count\">\n                    {/* {cardData[0]?.totalAvailableIRC} */}\n                    <div className='courseimg'>\n                    <img src={learn}/>\n                    </div>\n                    </Typography>\n                    <Typography className=\"title\">\n                    Learn code online\n                    </Typography>\n                    <div className='detailbtn'>\n                    <Button\n                    variant='outlined'\n                    sx={{bgcolor:\"skyblue\",color:\"black\"}}\n                    onClick={handleDetails}\n                    >\n                        View Details\n                    </Button>\n\n                    </div>\n                    \n            </Box>\n        </Grid>\n        <Grid item xs={4} sm={4} md={4}>\n            <Box className=\"card\" sx={{width:\"380px\",height:\"300px\"}}>\n                    <Typography className=\"count\">\n                    {/* {cardData[0]?.totalAvailableIRC} */}\n                    <div className='courseimg'>\n                    <img src={physics}  className='physics'/>\n                    </div>\n                    </Typography>\n                    <Typography className=\"title\">\n                    Fun with Science\n                    </Typography>\n                    <div className='detailbtn'>\n                    <Button\n                    variant='outlined'\n                    sx={{bgcolor:\"skyblue\",color:\"black\"}}\n                    onClick={handleDetails}\n                    >\n                        View Details\n                    </Button>\n\n                    </div>\n                    \n            </Box>\n        </Grid>\n        \n    </Grid>\n    </div>\n  )\n}\n\nexport default Allcourse\n","/home/shivam/Desktop/lms task/elearning/src/components/UpcomingCourses/UpcomingCourse.js",["67","68","69"],[],"/home/shivam/Desktop/lms task/elearning/src/components/Details1/Permutation.js",["70","71"],[],"import React from 'react'\nimport './Permutation.css'\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container} from 'react-bootstrap';\nimport {Grid,Box,Typography,Button} from '@mui/material'\n\nimport pnc from '../AllCourses/p&c.jpeg';\nimport {useNavigate} from 'react-router-dom';\n\nconst Permutation = () => {\n    const navigate = useNavigate();\n  return (\n    <div className='stock'>\n        {/* <h1>Details Page</h1> */}\n        \n        <div className='gridcont'>\n        <Grid item xs={4}>\n            <Box className=\"card\" sx={{width:\"480px\",height:\"300px\"}}>\n                    <Typography className=\"count\">\n                    {/* {cardData[0]?.totalAvailableIRC} */}\n                    <div className='courseimg'>\n                    <img src={pnc} className='pnc'/>\n                    </div>\n\n                    </Typography>\n                    <Typography className=\"title\">\n                    Permutation and combination\n                    </Typography>\n                    <div className='detailbtn'>\n                    \n\n                    </div>\n                    \n\n                   \n                    \n            </Box>\n        </Grid>\n       \n        \n\n        </div>\n        <Typography>\n            <h2>\n                Permutaion and combination is as follows:\n            </h2>\n            <p className='datadiv'>\n            Permutation\nIt is the distinct interpretations of a provided number of components carried one by one, or some, or all at a time. For example, if we have two components A and B, then there are two likely performances, AB and BA.\n\nA numeral of permutations when ‘r’ components are positioned out of a total of ‘n’ components is n Pr = n! / (n – r)!. For example, let n = 3 (A, B, and C) and r = 2 (All permutations of size 2). The answer is 3!/(3 – 2)! = 6. The six permutations are AB, AC, BA, BC, CA, and CB.\n\nExplanation of Permutation Formula\nA permutation is a type of performance that indicates how to permute. If there are three different numerals 1, 2 and 3 and if someone is curious to permute the numerals taking 2 at a moment, it shows (1, 2), (1, 3), (2, 1), (2, 3), (3, 1), and (3, 2). That is it can be accomplished in 6 methods. \n            </p>\n        </Typography>\n\n        {/* <Container > */}\n        <div class=\"ratio ratio-21x9\">  \n            {/* <iframe src=\"https://www.youtube.com/embed/zpOULjyy-n8?rel=0\" title=\"YouTube video\" allowfullscreen></iframe> */}\n            <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/0NAASclUm4k\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\n        </div>\n        {/* </Container> */}\n        <div className='optionbtn'>\n            <Button\n            variant='outlined'\n            sx={{bgcolor:\"skyblue\",color:\"black\",fontWeight:\"bolder\"}}\n            onClick={()=>navigate('/skillquiz')}\n            >\n                Take Skill Quiz\n            </Button>\n\n        </div>\n\n        \n            \n        \n        \n\n\n      \n    </div>\n  )\n}\n\nexport default Permutation\n","/home/shivam/Desktop/lms task/elearning/src/components/Quiz/Quiz.js",["72"],[],"import React, { useState } from 'react'\nimport './Quiz.css';\nimport '../Data/QuizData';\nimport { QuizData } from '../Data/QuizData';\nimport QuizResult from '../QuizResult/QuizResult';\n\nconst Quiz = () => {\n    const [currentQuestion,showCurrentQuestion]= useState(0);\n    const [score,setScore]= useState(0);\n    const [clickedOption,setClickedOption]=useState(0);\n    const [showResult,setShowResult]=useState(false);\n\n\n    const changeQuestion=()=>{\n            updateScore();\n            if(currentQuestion<QuizData.length-1){\n                showCurrentQuestion(currentQuestion+1);\n                setClickedOption(0);\n            }\n            else{\n\n                setShowResult(true);\n            }\n\n        }\n\n        const updateScore=()=>{\n            if(clickedOption===QuizData[currentQuestion].answer){\n                setScore(score+1);\n            }\n        }\n\n  return (\n    <div>\n        \n        <p className='heading-txt'>Quiz For You</p>\n        <div className='backdisp'>\n        <div className='container'>\n            {showResult ? (\n             <QuizResult score={score} totalScore={QuizData.length}/>   \n            ):(\n                <>\n                 <div className='question'>\n                <span id=\"question-number\">{currentQuestion+1}.</span>\n                <span id=\"question-txt\">{QuizData[currentQuestion].question}</span>\n\n            </div>\n            <div className='option-container'>\n               {QuizData[currentQuestion].options.map((option,i)=>{\n                    return(\n                        <button\n                        className={`option-btn ${\n                            clickedOption==i+1 ? 'checked' : null\n                        }`}\n                        \n                        onClick={()=>setClickedOption(i+1)}\n                        > \n                        {option}\n\n                        </button>\n                    )\n               })}\n            </div>  \n            <input type='button' value=\"Next\" id=\"next-button\" onClick={changeQuestion}/>\n\n                </>\n               \n            )}\n              \n\n        </div>\n\n        </div>\n        \n\n       \n     \n    </div>\n  )\n}\n\nexport default Quiz\n","/home/shivam/Desktop/lms task/elearning/src/components/Data/QuizData.js",[],[],"/home/shivam/Desktop/lms task/elearning/src/components/QuizResult/QuizResult.js",[],[],{"ruleId":"73","severity":1,"message":"74","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":12},{"ruleId":"73","severity":1,"message":"77","line":30,"column":11,"nodeType":"75","messageId":"76","endLine":30,"endColumn":26},{"ruleId":"78","severity":1,"message":"79","line":39,"column":21,"nodeType":"80","endLine":39,"endColumn":53},{"ruleId":"78","severity":1,"message":"79","line":67,"column":21,"nodeType":"80","endLine":67,"endColumn":39},{"ruleId":"78","severity":1,"message":"79","line":91,"column":21,"nodeType":"80","endLine":91,"endColumn":62},{"ruleId":"78","severity":1,"message":"79","line":38,"column":17,"nodeType":"80","endLine":38,"endColumn":53},{"ruleId":"78","severity":1,"message":"79","line":65,"column":17,"nodeType":"80","endLine":65,"endColumn":55},{"ruleId":"78","severity":1,"message":"79","line":88,"column":17,"nodeType":"80","endLine":88,"endColumn":57},{"ruleId":"73","severity":1,"message":"81","line":4,"column":9,"nodeType":"75","messageId":"76","endLine":4,"endColumn":18},{"ruleId":"78","severity":1,"message":"79","line":22,"column":21,"nodeType":"80","endLine":22,"endColumn":53},{"ruleId":"82","severity":1,"message":"83","line":53,"column":42,"nodeType":"84","messageId":"85","endLine":53,"endColumn":44},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'OnLogoutSuccess' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Container' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]